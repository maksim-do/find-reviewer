{"version":3,"sources":["action/index.js","components/Filter/FilterBlackList.jsx","components/Filter/FilterRepo.jsx","components/Filter/FilterUserName.jsx","components/Filter/FilterShow.jsx","servises/getContributors.js","servises/getUser.js","servises/getRandomNumber.js","servises/getReviewerData.js","servises/getAnswerData.js","components/Filter/FilterSubmit.jsx","components/Filter/Filter.jsx","components/Answer/AnswerCardCurrentUser.jsx","components/Answer/AnswerCardContributors.jsx","components/Answer/AnswerNotAnswer.jsx","components/Answer/AnswerCardReviewer.jsx","components/Answer/Answer.jsx","components/App/App.jsx","reducers/filterDataReducer.js","reducers/filterHideReducer.js","reducers/answerDataReducer.js","reducers/requestStateReducer.js","reducers/answerStateReducer.js","reducers/index.js","middleware/thunk.js","initState.js","index.js"],"names":["changeValueRepo","createAction","changeValueUser","filterHideToggle","updateTaskRequest","updateTaskSuccess","updateTaskFailure","addItemBlackList","removeItemBlackList","FilterElBlackList","elProps","value","removeEl","href","className","onClick","FilterBlackList","blackList","useSelector","state","filterData","dispatch","useDispatch","inputEl","useRef","handleRemoveItem","item","e","preventDefault","list","map","type","onKeyPress","keyCode","ref","name","id","el","valueInput","current","includes","focus","length","FilterRepo","repo","classList","cn","htmlFor","onChange","target","trim","toLowerCase","text","FilterUserName","user","userName","FilterShow","filterHide","status","getContributors","a","pathApi","urlPathApi","URL","fetch","respose","ok","json","data","Error","getUsers","getRandomNumber","max","Math","floor","random","getReviewerData","listData","result","userNotBlackList","filter","login","count","getAnswerData","getState","localStorage","setItem","JSON","stringify","contributorsData","contributors","userData","find","getUser","currentUserData","users","reviewerData","reviewer","FilterSubmit","requestState","disabled","Filter","card","collapse","AnswerCardCurrentUser","answerData","imageSrc","avatar_url","src","alt","AnswerCardContributor","AnswerCardContributors","listContributors","AnswerNotAnswer","AnswerCardReviewer","Answer","answerState","App","combineReducers","action","payload","answerStateReducer","filterDataReducer","filterHideReducer","answerDataReducer","requestStateReducer","thunk","next","filterDataLocalStorage","parse","getItem","answerUIState","store","createStore","reducers","initState","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7a15d97.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\n\nexport const changeValueRepo = createAction('CHANGE_VALUE_REPO');\nexport const changeValueUser = createAction('CHANGE_VALUE_USER');\nexport const filterHideToggle = createAction('FILTER_HIDE_TOGGLE');\nexport const updateTaskRequest = createAction('TASK_UPDATE_REQUEST');\nexport const updateTaskSuccess = createAction('TASK_UPDATE_SUCCESS');\nexport const updateTaskFailure = createAction('TASK_UPDATE_FAILURE');\nexport const addItemBlackList = createAction('ADD_ITEM_BLACKLIST');\nexport const removeItemBlackList = createAction('REMOVE_ITEM_BLACKLIST');\n","import React, { useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addItemBlackList, removeItemBlackList } from '../../action/index';\n\nconst isContainValue = (arr, el) => arr.map(({ value }) => value).includes(el);\n\nconst FilterElBlackList = (elProps) => {\n  const { value, removeEl } = elProps;\n  return (\n    <a href=\"/#\" className=\"list-group-item list-group-item-action\" onClick={removeEl(value)}>{value}</a>\n  );\n};\n\nconst FilterBlackList = () => {\n  const blackList = useSelector((state) => state.filterData.blackList);\n  const dispatch = useDispatch();\n  const inputEl = useRef(null);\n  const handleAddItem = (e) => {\n    e.preventDefault();\n    const valueInput = inputEl.current.value;\n    if (!isContainValue(blackList, valueInput) && valueInput !== '') {\n      dispatch(addItemBlackList({ item: valueInput }));\n    }\n    inputEl.current.value = '';\n    inputEl.current.focus();\n  };\n\n  const handleRemoveItem = (item) => (e) => {\n    e.preventDefault();\n    dispatch(removeItemBlackList({ item }));\n  };\n\n  const enterDown = (e) => {\n    if (e.keyCode === 13) e.preventDefault();\n  };\n\n  const list = blackList.map((value) => (\n    <FilterElBlackList\n      key={value}\n      value={value}\n      removeEl={handleRemoveItem}\n    />\n  ));\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">BlackList</h5>\n        <div className=\"row\">\n          <div className=\"col-8 input-group-sm col-md-10\">\n            <input type=\"text\" onKeyPress={enterDown} className=\"form-control\" ref={inputEl} name=\"addblacklist\" id=\"addblacklist\" />\n          </div>\n          <div className=\"col-4 col-md-2\">\n            <button type=\"button\" onClick={handleAddItem} className=\"btn btn-sm btn-primary col-12\">add</button>\n          </div>\n          {(blackList.length > 0) && (\n          <div className=\"list-group col-12 pl-3 mt-3\">\n            {list}\n          </div>\n          )}\n        </div>\n\n      </div>\n    </div>\n\n  );\n};\n\nexport default FilterBlackList;\n","import React from 'react';\nimport cn from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeValueRepo } from '../../action/index';\n\nconst FilterRepo = () => {\n  const repo = useSelector((state) => state.filterData.repo);\n  const dispatch = useDispatch();\n  // контроль полей ввода\n  const handleChangeRepoValue = (e) => {\n    const value = e.target.value.trim().toLowerCase();\n    dispatch(changeValueRepo({ text: value }));\n  };\n  const classList = cn({\n    'form-control': true,\n    'is-invalid': repo === '',\n  });\n  return (\n    <div className=\"form-group col-12 col-sm-6\">\n      <label htmlFor=\"repo\" className=\"col-form-label\">Repository</label>\n      <input type=\"text\" className={classList} value={repo} onChange={handleChangeRepoValue} name=\"repo\" id=\"repo\" />\n      <div className=\"invalid-feedback\">\n        Please fill in the field.\n      </div>\n    </div>\n  );\n};\n\nexport default FilterRepo;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n//  пакет для формирования строки классов\nimport cn from 'classnames';\nimport { changeValueUser } from '../../action/index';\n\nconst FilterUserName = () => {\n  const value = useSelector((state) => state.filterData.user);\n  const dispatch = useDispatch();\n  // контроль полей ввода\n  const handleChangeRepoValue = (e) => {\n    const userName = e.target.value.trim().toLowerCase();\n    dispatch(changeValueUser({ text: userName }));\n  };\n  const classList = cn({\n    'form-control': true,\n    'is-invalid': value === '',\n  });\n  return (\n    <div className=\"form-group col-12 col-sm-6\">\n      <label htmlFor=\"username\" className=\"col-form-label\">Username</label>\n      <input type=\"text\" className={classList} value={value} onChange={handleChangeRepoValue} name=\"username\" id=\"username\" />\n      <div className=\"invalid-feedback\">\n        Please fill in the field.\n      </div>\n    </div>\n  );\n};\n\nexport default FilterUserName;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterHideToggle } from '../../action/index';\n\n// переключатель видимости настроек фильтра\n\nconst FilterShow = () => {\n  const value = useSelector(({ filterHide }) => filterHide);\n  const dispatch = useDispatch();\n  const handleChangeVisibility = () => {\n    dispatch(filterHideToggle(value));\n  };\n  const status = value ? 'Show' : 'Hide';\n  return (\n    <button type=\"button\" className=\"btn btn-info ml-4\" onClick={handleChangeVisibility}>\n      {status}\n      {' '}\n      filter\n    </button>\n  );\n};\n\nexport default FilterShow;\n","const getContributors = async (userName, repo) => {\n  const pathApi = `https://api.github.com/repos/${userName}/${repo}/contributors`;\n  const urlPathApi = new URL(pathApi);\n  const respose = await fetch(urlPathApi);\n  if (respose.ok) {\n    const data = await respose.json();\n    return data;\n  }\n  throw new Error();\n};\n\nexport default getContributors;\n","const getUsers = async (userName) => {\n  const pathApi = `https://api.github.com/users/${userName}`;\n  const urlPathApi = new URL(pathApi);\n  const respose = await fetch(urlPathApi);\n  if (respose.ok) {\n    const data = await respose.json();\n    return data;\n  }\n  throw new Error();\n};\n\nexport default getUsers;\n","const getRandomNumber = (max) => {\n  const min = 0;\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport default getRandomNumber;\n","import getRandomNumber from './getRandomNumber';\n\nconst getReviewerData = (listData, blackList) => {\n  const userNotBlackList = listData\n    .filter(({ login }) => !blackList.includes(login));\n  const count = userNotBlackList.length;\n  let result;\n  switch (count) {\n    case 0:\n      result = null;\n      break;\n    case 1:\n      [result] = userNotBlackList;\n      break;\n    default:\n      result = userNotBlackList[getRandomNumber(count - 1)];\n  }\n  return result;\n};\n\nexport default getReviewerData;\n","import getContributors from './getContributors';\nimport getUser from './getUser';\nimport getReviewerData from './getReviewerData';\nimport { updateTaskSuccess, updateTaskFailure, updateTaskRequest } from '../action/index';\n\n// результы походов к api храним в нормализованном виде.\nconst getAnswerData = async (dispatch, getState) => {\n  try {\n    dispatch(updateTaskRequest());\n    const state = getState();\n    const { filterData } = state;\n    const { user, repo, blackList } = filterData;\n    localStorage.setItem('filterData', JSON.stringify(filterData));\n    const contributorsData = await getContributors(user, repo);\n    const contributors = contributorsData.map((el) => el.id);\n    const userData = contributorsData.find((el) => el.login === user);\n    // если в соавторах нет текущего юзера идем на бекенд\n    const currentUserData = userData ?? await getUser(user);\n    const current = currentUserData.id;\n    const users = !userData\n      ? [...contributorsData, currentUserData]\n      : contributorsData;\n    const reviewerData = getReviewerData(contributorsData, blackList);\n    const reviewer = reviewerData === null ? null : reviewerData.id;\n    dispatch(updateTaskSuccess(\n      {\n        contributors,\n        current,\n        users,\n        reviewer,\n      },\n    ));\n  } catch {\n    dispatch(updateTaskFailure());\n  }\n};\n\nexport default getAnswerData;\n","// кнопка отправки запроса\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport getAnswerData from '../../servises/getAnswerData';\n\nconst FilterSubmit = () => {\n  const requestState = useSelector((state) => state.requestState);\n  const filterData = useSelector((state) => state.filterData);\n  const dispatch = useDispatch();\n  const { user, repo } = filterData;\n  const isInvalidValueInputs = user === '' || repo === '';\n  const disabled = requestState === 'request' || isInvalidValueInputs;\n  const handlerGetAnswer = (e) => {\n    e.preventDefault();\n    dispatch(getAnswerData);\n  };\n\n  return (\n    <button type=\"button\" className=\"btn btn-primary\" onClick={handlerGetAnswer} disabled={disabled}>find reviewer</button>\n  );\n};\n\nexport default FilterSubmit;\n","// компонент отвечающий за управление параметрами поиска\nimport React from 'react';\nimport cn from 'classnames';\nimport { useSelector } from 'react-redux';\nimport FilterBlackList from './FilterBlackList';\nimport FilterRepo from './FilterRepo';\nimport FilterUserName from './FilterUserName';\nimport FilterShow from './FilterShow';\nimport FilterSubmit from './FilterSubmit';\n\nfunction Filter() {\n  const classList = cn({\n    'border-0': true,\n    'mt-2': true,\n    'col-12': true,\n    card: true,\n    collapse: useSelector((state) => state.filterHide),\n  });\n\n  return (\n    <>\n      <div className={classList}>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <FilterUserName />\n            <FilterRepo />\n          </div>\n          <FilterBlackList />\n        </div>\n      </div>\n      <div className=\"card col-12 border border-0\">\n        <div className=\"card-body\">\n          <FilterSubmit />\n          <FilterShow />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst AnswerCardCurrentUser = () => {\n  const data = useSelector((state) => state.answerData);\n  const { current, users } = data;\n  const user = users.find(({ id }) => id === current);\n  const imageSrc = user.avatar_url;\n\n  return (\n    <div className=\"card col-12 border-0\">\n      <div className=\"card-body fullHeight\">\n        <h4 className=\"card-title mt-3\">Current user</h4>\n        <h5 className=\"card-subtitle mb-2\">{user?.login}</h5>\n        <img className=\"card-img-top\" src={imageSrc} alt=\"Not found foto\" />\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerCardCurrentUser;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst AnswerCardContributor = (data) => {\n  const { user } = data;\n  const { login } = user;\n  const imageSrc = user.avatar_url;\n  return (\n    <div className=\"col\">\n      <div className=\"card h-100 border-0\">\n        <div className=\"card-body\">\n          <div className=\"card-title\"><h5>{login}</h5></div>\n          <img className=\"card-img-top\" src={imageSrc} alt=\"Not found foto\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AnswerCardContributors = () => {\n  const data = useSelector((state) => state.answerData);\n  const { contributors, users } = data;\n  const contributorsDataList = users.filter(({ id }) => contributors.includes(id));\n  const listContributors = contributorsDataList\n    .map((el) => <AnswerCardContributor key={el.id} user={el} />);\n  return (\n    <div className=\"card col-12 border-0\">\n      <div className=\"card-body\">\n        <h4 className=\"card-title mt-5\">The list of contributors</h4>\n\n        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\n          {listContributors}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerCardContributors;\n","import React from 'react';\n\nconst AnswerNotAnswer = (data) => {\n  const { text } = data;\n  return (\n    <div className=\"card col-12 border-0\">\n      <div className=\"card-body\">\n        <div className=\"card-title\"><h3>{text}</h3></div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerNotAnswer;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport AnswerNotAnswer from './AnswerNotAnswer';\n\nconst AnswerCardReviewer = () => {\n  const data = useSelector((state) => state.answerData);\n  const { reviewer, users } = data;\n  if (reviewer === null) return <AnswerNotAnswer text=\"Reviewer not found\" />;\n  const user = users.find(({ id }) => id === reviewer);\n  const imageSrc = user.avatar_url;\n\n  return (\n    <div className=\"card col-12 border-0\">\n      <div className=\"card-body fullHeight\">\n        <h4 className=\"card-title mt-3\">Reviever</h4>\n        <h5 className=\"card-subtitle mb-2\">{user?.login}</h5>\n        <img className=\"card-img-top\" src={imageSrc} alt=\"Not found foto\" />\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerCardReviewer;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport AnswerCardCurrentUser from './AnswerCardCurrentUser';\nimport AnswerCardContributors from './AnswerCardContributors';\nimport AnswerCardReviewer from './AnswerCardReviewer';\nimport AnswerNotAnswer from './AnswerNotAnswer';\n\n// компонент отрисовывающий результаты поиска ревьювера\nconst Answer = () => {\n  const requestState = useSelector((state) => state.answerState);\n  if (requestState === null) return null;\n  if (requestState === 'failure') return <AnswerNotAnswer text=\"Something went wrong\" />;\n  return (\n    <>\n      <AnswerCardCurrentUser />\n      <AnswerCardReviewer />\n      <AnswerCardContributors />\n    </>\n  );\n};\nexport default Answer;\n","import React from 'react';\nimport Filter from '../Filter/Filter';\nimport Answer from '../Answer/Answer';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Filter />\n      </div>\n      <div className=\"row\">\n        <Answer />\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nconst repo = (state = '', action) => {\n  switch (action.type) {\n    case 'CHANGE_VALUE_REPO':\n      return action.payload.text;\n    default:\n      return state;\n  }\n};\n\nconst user = (state = '', action) => {\n  switch (action.type) {\n    case 'CHANGE_VALUE_USER':\n      return action.payload.text;\n    default:\n      return state;\n  }\n};\n\nconst blackList = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_ITEM_BLACKLIST':\n      return [...state, action.payload.item];\n    case 'REMOVE_ITEM_BLACKLIST':\n      return state.filter((el) => el !== action.payload.item);\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  repo,\n  user,\n  blackList,\n});\n","const filterHide = (state = '', action) => {\n  switch (action.type) {\n    case 'FILTER_HIDE_TOGGLE':\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport default filterHide;\n","const answerData = (state = null, action) => {\n  switch (action.type) {\n    case 'TASK_UPDATE_SUCCESS':\n      return action.payload;\n    case 'TASK_UPDATE_FAILURE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default answerData;\n","const answerData = (state = null, action) => {\n  switch (action.type) {\n    case 'TASK_UPDATE_SUCCESS':\n      return 'success';\n    case 'TASK_UPDATE_FAILURE':\n      return 'failure';\n    case 'TASK_UPDATE_REQUEST':\n      return 'request';\n    default:\n      return state;\n  }\n};\n\nexport default answerData;\n","const answerStateReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'TASK_UPDATE_SUCCESS':\n      return 'success';\n    case 'TASK_UPDATE_FAILURE':\n      return 'failure';\n    default:\n      return state;\n  }\n};\n\nexport default answerStateReducer;\n","import { combineReducers } from 'redux';\nimport filterDataReducer from './filterDataReducer';\nimport filterHideReducer from './filterHideReducer';\nimport answerDataReducer from './answerDataReducer';\nimport requestStateReducer from './requestStateReducer';\nimport answerStateReducer from './answerStateReducer';\n\nexport default combineReducers({\n  filterData: filterDataReducer,\n  filterHide: filterHideReducer,\n  answerData: answerDataReducer,\n  requestState: requestStateReducer,\n  answerState: answerStateReducer,\n});\n","const thunk = ({ dispatch, getState }) => (next) => (action) => {\n  if (typeof action === 'function') {\n    return action(dispatch, getState);\n  }\n  return next(action);\n};\n\nexport default thunk;\n","const filterDataLocalStorage = JSON.parse(localStorage.getItem('filterData'));\nconst filterData = {\n  repo: '',\n  user: '',\n  blackList: [],\n};\nconst state = {\n  filterData: { ...filterData, ...filterDataLocalStorage },\n  filterHide: false,\n  answerData: {\n    reviewer: null,\n    current: null,\n    contributors: [],\n    users: [],\n  },\n  answerUIState: null,\n  requestState: null,\n};\n\nexport default state;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport App from './components/App/App';\n//  import reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport reducers from './reducers/index';\nimport thunk from './middleware/thunk';\nimport initState from './initState';\n\nconst store = createStore(reducers, initState,\n  applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//  reportWebVitals();\n"],"sourceRoot":""}