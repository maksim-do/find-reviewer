{"version":3,"sources":["components/Filter/FilterBlackList.jsx","components/Filter/FilterRepo.jsx","components/Filter/FilterUserName.jsx","components/Filter/Filter.jsx","components/Answer/AnswerCardCurrentUser.jsx","components/Answer/AnswerCardContributors.jsx","components/Answer/AnswerCardReviewer.jsx","components/Answer/AnswerNotAnswer.jsx","components/Answer/Answer.jsx","components/App/App.jsx","index.js"],"names":["FilterElBlackList","elProps","id","value","removeEl","href","className","onClick","FilterBlackList","blackListProps","useState","valueInput","setValue","inputEl","useRef","blackList","addElBlackList","list","map","type","ref","onChange","e","target","name","el","preventDefault","includes","Math","floor","random","toString","current","focus","length","FilterRepo","repoProps","valid","classList","cn","htmlFor","FilterUserName","userNameProps","FilterSubmit","propsFilter","disabled","FilterShow","status","Filter","setAnswer","hide","setHide","userNameValue","setUserNameValue","userNameValid","setUserNameValid","repoValue","setRepoValue","repoValid","setRepoValid","setBlackList","fillingQuery","setFillingQuery","pathApi","urlPathApi","URL","card","collapse","inValidForm","useLayoutEffect","filterState","JSON","parse","localStorage","getItem","onKeyDown","keyCode","key","filter","a","fetch","respose","ok","json","data","usersBlackList","userNotBlackList","login","count","result","max","response","reviewer","contributors","currentUser","message","setItem","stringify","query","AnswerCardCurrentUser","dataProps","user","imageSrc","setImageSrc","useEffect","avatar_url","src","alt","AnswerCardContributor","AnswerCardContributors","listContributors","AnswerCardReviewer","AnswerNotAnswer","text","Answer","answerProps","notQuery","error","notAnswer","answer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c40fd13f.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\n\nconst getId = () => {\n  const min = 0;\n  const max = 1679615;\n  const int = Math.floor(Math.random() * (max - min + 1)) + min;\n  return int.toString(36);\n};\n\nconst isContainValue = (arr, el) => {\n  const values = arr.map(({ value }) => value);\n  return values.includes(el);\n};\n\nconst FilterElBlackList = (elProps) => {\n  const { id, value, removeEl } = elProps;\n  return (\n    <a href=\"/#\" className=\"list-group-item list-group-item-action\" onClick={removeEl(id)}>{value}</a>\n  );\n};\n\nconst FilterBlackList = (blackListProps) => {\n  const [valueInput, setValue] = useState('');\n  const inputEl = useRef(null);\n  const onChange = (e) => { setValue(e.target.value); };\n  const { blackList, addElBlackList, removeEl } = blackListProps;\n  const onClick = (e) => {\n    e.preventDefault();\n    if (!isContainValue(blackList, valueInput) && valueInput !== '') {\n      addElBlackList([{ id: getId(), value: valueInput }, ...blackList]);\n    }\n    setValue('');\n    inputEl.current.focus();\n  };\n\n  const list = blackList.map(({ id, value }) => (\n    <FilterElBlackList\n      key={id}\n      id={id}\n      value={value}\n      removeEl={removeEl}\n    />\n  ));\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">BlackList</h5>\n        <div className=\"row\">\n          <div className=\"col-8 input-group-sm col-md-10\">\n            <input type=\"text\" className=\"form-control\" ref={inputEl} value={valueInput} onChange={onChange} name=\"addblacklist\" id=\"addblacklist\" />\n          </div>\n          <div className=\"col-4 col-md-2\">\n            <button type=\"button\" onClick={onClick} className=\"btn btn-sm btn-primary col-12\">add</button>\n          </div>\n          {(blackList.length > 0) && (\n          <div className=\"list-group col-12 pl-3 mt-3\">\n            {list}\n          </div>\n          )}\n        </div>\n\n      </div>\n    </div>\n\n  );\n};\n\nexport default FilterBlackList;\n","import React from 'react';\nimport cn from 'classnames';\n\nconst FilterRepo = (repoProps) => {\n  const { value, onChange, valid } = repoProps;\n  const classList = cn({\n    'form-control': true,\n    'is-invalid': valid,\n  });\n  return (\n    <div className=\"form-group col-12 col-sm-6\">\n      <label htmlFor=\"repo\" className=\"col-form-label\">Repository</label>\n      <input type=\"text\" className={classList} value={value} onChange={onChange} name=\"repo\" id=\"repo\" />\n      <div className=\"invalid-feedback\">\n        Please fill in the field.\n      </div>\n    </div>\n  );\n};\n\nexport default FilterRepo;\n","import React from 'react';\nimport cn from 'classnames';\n\nconst FilterUserName = (userNameProps) => {\n  const {\n    value,\n    onChange,\n    valid,\n  } = userNameProps;\n  const classList = cn({\n    'form-control': true,\n    'is-invalid': valid,\n  });\n  return (\n    <div className=\"form-group col-12 col-sm-6\">\n      <label htmlFor=\"username\" className=\"col-form-label\">Username</label>\n      <input type=\"text\" className={classList} value={value} onChange={onChange} name=\"username\" id=\"username\" />\n      <div className=\"invalid-feedback\">\n        Please fill in the field.\n      </div>\n    </div>\n  );\n};\n\nexport default FilterUserName;\n","// компонент отвечающий за управление параметрами поиска\nimport React, { useState, useLayoutEffect } from 'react';\nimport cn from 'classnames';\nimport FilterBlackList from './FilterBlackList';\nimport FilterRepo from './FilterRepo';\nimport FilterUserName from './FilterUserName';\n\nconst getRandomNumber = (max) => {\n  const min = 0;\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n// кнопка отправки запроса\nconst FilterSubmit = (propsFilter) => {\n  const { disabled, onClick } = propsFilter;\n  return (\n    <button type=\"button\" className=\"btn btn-primary\" onClick={onClick} disabled={disabled}>find reviewer</button>\n  );\n};\n\n// переключатель видимости настроек фильтра\nconst FilterShow = (propsFilter) => {\n  const { value, onClick } = propsFilter;\n  const status = value ? 'Show' : 'Hide';\n  return (\n    <button type=\"button\" className=\"btn btn-info ml-4\" onClick={onClick}>\n      {status}\n      {' '}\n      filter\n    </button>\n  );\n};\n\nfunction Filter(propsFilter) {\n  const { setAnswer } = propsFilter;\n  const [hide, setHide] = useState(false);\n  const [userNameValue, setUserNameValue] = useState('');\n  const [userNameValid, setUserNameValid] = useState(true);\n  const [repoValue, setRepoValue] = useState('');\n  const [repoValid, setRepoValid] = useState(true);\n  const [blackList, setBlackList] = useState([]);\n  const [fillingQuery, setFillingQuery] = useState(false);\n  const pathApi = `https://api.github.com/repos/${userNameValue}/${repoValue}/contributors`;\n  const urlPathApi = new URL(pathApi);\n  // контроль полей ввода\n  const changeRepoValue = (e) => {\n    const { value } = e.target;\n    setRepoValue(value);\n    setRepoValid(value === '');\n  };\n\n  const changeUserNameValue = (e) => {\n    const { value } = e.target;\n    setUserNameValue(value);\n    setUserNameValid(value === '');\n  };\n\n  // изменение видимости настроек\n  const changeVisibility = () => {\n    setHide(!hide);\n  };\n\n  // удаление юзера из блэклиста\n  const removeElBlackList = (key) => (e) => {\n    e.preventDefault();\n    setBlackList(blackList.filter(({ id }) => id !== key));\n  };\n\n  const classList = cn({\n    'border-0': true,\n    'mt-2': true,\n    'col-12': true,\n    card: true,\n    collapse: hide,\n  });\n\n  // валидация формы, вычисляемое значение поэтому в состояния не заносим\n  const inValidForm = userNameValid || repoValid || fillingQuery;\n\n  // запрос и формирование состояния ответа,\n  // допускается что текущий юзер может быть сам себе ревьювером\n  const getAnswer = (e) => {\n    e.preventDefault();\n    setFillingQuery(true);\n    if ((inValidForm)) return;\n    const query = async () => {\n      try {\n        const respose = await fetch(urlPathApi);\n        if (respose.ok) {\n          const data = await respose.json();\n          const usersBlackList = blackList.map(({ value }) => value);\n          const userNotBlackList = data.filter(({ login }) => !usersBlackList.includes(login));\n          const count = userNotBlackList.length;\n          let result;\n          switch (count) {\n            case 0:\n              result = null;\n              break;\n            case 1:\n              [result] = userNotBlackList;\n              break;\n            default:\n              result = userNotBlackList[getRandomNumber(count)];\n          }\n          setAnswer({ result: 'answer', response: { reviewer: result, contributors: data, currentUser: userNameValue } });\n        } else {\n          setAnswer({ result: 'notAnswer', response: `Данные по контребьюторам не получены. Код ответа ${respose.status}` });\n        }\n      } catch (_err) {\n        setAnswer({ result: 'error', response: `Error: ${_err.message}.` });\n      }\n      const filterState = {\n        hide,\n        userNameValue,\n        userNameValid,\n        repoValue,\n        repoValid,\n        blackList,\n      };\n      localStorage.setItem('filterState', JSON.stringify(filterState));\n      setFillingQuery(false);\n    };\n    query();\n  };\n\n  const enterDown = (e) => {\n    if (e.keyCode === 13) e.preventDefault();\n  };\n\n  //  исключаем мерцание при отрисовке  - используем useLayoutEffect\n  useLayoutEffect(() => {\n    const filterState = JSON.parse(localStorage.getItem('filterState'));\n\n    if (filterState !== null) {\n      setHide(filterState.hide);\n      setUserNameValue(filterState.userNameValue);\n      setUserNameValid(filterState.userNameValid);\n      setRepoValue(filterState.repoValue);\n      setRepoValid(filterState.repoValid);\n      setBlackList(filterState.blackList);\n    }\n  }, []);\n\n  return (\n    <>\n      <div className={classList}>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <FilterUserName\n              value={userNameValue}\n              valid={userNameValid}\n              onChange={changeUserNameValue}\n            />\n            <FilterRepo\n              value={repoValue}\n              valid={repoValid}\n              onChange={changeRepoValue}\n            />\n          </div>\n          <FilterBlackList\n            blackList={blackList}\n            addElBlackList={setBlackList}\n            onKeyDown={enterDown}\n            removeEl={removeElBlackList}\n          />\n        </div>\n      </div>\n      <div className=\"card col-12 border border-0\">\n        <div className=\"card-body\">\n          <FilterSubmit disabled={inValidForm} onClick={getAnswer} />\n          <FilterShow value={hide} onClick={changeVisibility} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\n\nconst AnswerCardCurrentUser = (dataProps) => {\n  const { user } = dataProps;\n  const [imageSrc, setImageSrc] = useState(null);\n  const pathApi = `https://api.github.com/users/${user}`;\n  const urlPathApi = new URL(pathApi);\n\n  // получение ссылки на аватар\n  useEffect(() => {\n    const query = async () => {\n      try {\n        const respose = await fetch(urlPathApi);\n        if (respose.ok) {\n          const data = await respose.json();\n          setImageSrc(data.avatar_url);\n        } else {\n          setImageSrc(null);\n        }\n      } catch (_err) {\n        setImageSrc(null);\n      }\n    };\n    query();\n  }, [user]);\n\n  return (\n    <div className=\"card col-12 border-0\">\n      <div className=\"card-body fullHeight\">\n        <h4 className=\"card-title mt-3\">Текущий пользователь</h4>\n        <h5 className=\"card-subtitle mb-2\">{user}</h5>\n        {(imageSrc !== null) && <img className=\"card-img-top\" src={imageSrc} alt=\"Not found foto\" />}\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerCardCurrentUser;\n","import React from 'react';\n//  простенький генератор id, без проверки\nconst getId = () => {\n  const min = 0;\n  const max = 1679615;\n  const int = Math.floor(Math.random() * (max - min + 1)) + min;\n  return int.toString(36);\n};\n\nconst AnswerCardContributor = (data) => {\n  const { user } = data;\n  const { login } = user;\n  const imageSrc = user.avatar_url;\n  return (\n    <div className=\"col\">\n      <div className=\"card h-100 border-0\">\n        <div className=\"card-body\">\n          <div className=\"card-title mt-3\"><h5>{login}</h5></div>\n          <img className=\"card-img-top\" src={imageSrc} alt=\"Not found foto\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AnswerCardContributors = (data) => {\n  const { contributors } = data;\n  const listContributors = contributors.map((el) => {\n    const id = getId();\n    return <AnswerCardContributor key={id} user={el} />;\n  });\n  return (\n    <div className=\"card col-12\">\n      <div className=\"card-body\">\n        <h4 className=\"card-title mt-3\">Список соавторов</h4>\n\n        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\n          {listContributors}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerCardContributors;\n","import React from 'react';\n\nconst AnswerCardReviewer = (data) => {\n  const { user } = data;\n  const { login } = user;\n  const imageSrc = user.avatar_url;\n  return (\n    <div className=\"card col-12 border-0\">\n      <div className=\"card-body fullHeight\">\n        <h4 className=\"card-title mt-3\">Ревьювер</h4>\n        <h5 className=\"card-subtitle mb-2\">{login}</h5>\n        <img className=\"card-img-top\" src={imageSrc} alt=\"Not found foto\" />\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerCardReviewer;\n","import React from 'react';\n\nconst AnswerNotAnswer = (data) => {\n  const { text } = data;\n  return (\n    <div className=\"card col-12 border-0\">\n      <div className=\"card-body\">\n        <div className=\"card-title\"><h3>{text}</h3></div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerNotAnswer;\n","import React from 'react';\nimport AnswerCardCurrentUser from './AnswerCardCurrentUser';\nimport AnswerCardContributors from './AnswerCardContributors';\nimport AnswerCardReviewer from './AnswerCardReviewer';\nimport AnswerNotAnswer from './AnswerNotAnswer';\n\n// компонент отрисовывающий результаты поиска ревьювера\nconst Answer = (answerProps) => {\n  const { data } = answerProps;\n  const { result, response } = data;\n  /* компонент формируется в зависимости от типа ответа, допускается что текущий пользователь\n  может быть сам себе ревьювер */\n  const answerData = {\n    notQuery: () => null,\n    error: (el) => (\n      <AnswerNotAnswer text={el} />\n    ),\n    notAnswer: (el) => (\n      <AnswerNotAnswer text={el} />\n    ),\n    answer: (el) => {\n      const { reviewer, contributors, currentUser } = el;\n      return (\n        <>\n          <AnswerCardCurrentUser user={currentUser} />\n          {(reviewer === null) && <AnswerNotAnswer text=\"Нет подходящего кандидата в ревьюверы\" />}\n          {(reviewer !== null) && <AnswerCardReviewer user={reviewer} />}\n          <AnswerCardContributors contributors={contributors} />\n        </>\n      );\n    },\n  };\n  const card = answerData[result](response);\n  return card;\n};\n\nexport default Answer;\n","import React, { useState } from 'react';\nimport Filter from '../Filter/Filter';\nimport Answer from '../Answer/Answer';\n\nfunction App() {\n  const [answer, setAnswer] = useState({ result: 'notQuery' });\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Filter setAnswer={setAnswer} />\n      </div>\n      <div className=\"row\">\n        <Answer data={answer} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n//  import reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//  reportWebVitals();\n"],"sourceRoot":""}