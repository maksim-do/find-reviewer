{"version":3,"sources":["components/Filter/getRandomID.js","components/Filter/FilterBlackList.jsx","components/Filter/FilterRepo.jsx","components/Filter/FilterUserName.jsx","components/Filter/Filter.jsx","components/Answer/AnswerCardCurrentUser.jsx","components/Answer/AnswerCardContributors.jsx","components/Answer/AnswerCardReviewer.jsx","components/Answer/AnswerNotAnswer.jsx","components/Answer/Answer.jsx","components/App/App.jsx","index.js"],"names":["getId","list","id","listId","map","Math","floor","random","toString","includes","FilterElBlackList","elProps","value","removeEl","href","className","onClick","FilterBlackList","blackListProps","useState","valueInput","setValue","inputEl","useRef","blackList","addElBlackList","type","ref","onChange","e","target","name","el","preventDefault","current","focus","length","FilterRepo","repoProps","valid","classList","cn","htmlFor","FilterUserName","userNameProps","FilterSubmit","propsFilter","disabled","FilterShow","status","Filter","setAnswer","hide","setHide","userNameValue","setUserNameValue","userNameValid","setUserNameValid","repoValue","setRepoValue","repoValid","setRepoValid","setBlackList","fillingQuery","setFillingQuery","pathApi","urlPathApi","URL","card","collapse","inValidForm","useLayoutEffect","filterState","JSON","parse","localStorage","getItem","trim","onKeyDown","keyCode","key","filter","a","fetch","respose","ok","json","data","usersBlackList","toLowerCase","userNotBlackList","login","count","result","max","response","reviewer","contributors","currentUser","message","setItem","stringify","query","AnswerCardCurrentUser","dataProps","user","imageSrc","setImageSrc","useEffect","avatar_url","src","alt","AnswerCardContributor","AnswerCardContributors","listContributors","AnswerCardReviewer","AnswerNotAnswer","text","Answer","answerProps","content","undefined","App","answer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa4c7eb9.chunk.js","sourcesContent":["const getId = (list) => {\n  const listId = list.map(({ id }) => id);\n  let id;\n  do {\n    const min = 0;\n    const max = 1679615;\n    const int = Math.floor(Math.random() * (max - min + 1)) + min;\n    id = int.toString(36);\n  } while (listId.includes(id));\n\n  return id;\n};\n\nexport default getId;\n","import React, { useState, useRef } from 'react';\nimport getId from './getRandomID';\n\nconst isContainValue = (arr, el) => arr.map(({ value }) => value).includes(el);\n\nconst FilterElBlackList = (elProps) => {\n  const { id, value, removeEl } = elProps;\n  return (\n    <a href=\"/#\" className=\"list-group-item list-group-item-action\" onClick={removeEl(id)}>{value}</a>\n  );\n};\n\nconst FilterBlackList = (blackListProps) => {\n  const [valueInput, setValue] = useState('');\n  const inputEl = useRef(null);\n  const onChange = (e) => { setValue(e.target.value); };\n  const { blackList, addElBlackList, removeEl } = blackListProps;\n  const onClick = (e) => {\n    e.preventDefault();\n    if (!isContainValue(blackList, valueInput) && valueInput !== '') {\n      addElBlackList([{ id: getId(blackList), value: valueInput }, ...blackList]);\n    }\n    setValue('');\n    inputEl.current.focus();\n  };\n\n  const list = blackList.map(({ id, value }) => (\n    <FilterElBlackList\n      key={id}\n      id={id}\n      value={value}\n      removeEl={removeEl}\n    />\n  ));\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">BlackList</h5>\n        <div className=\"row\">\n          <div className=\"col-8 input-group-sm col-md-10\">\n            <input type=\"text\" className=\"form-control\" ref={inputEl} value={valueInput} onChange={onChange} name=\"addblacklist\" id=\"addblacklist\" />\n          </div>\n          <div className=\"col-4 col-md-2\">\n            <button type=\"button\" onClick={onClick} className=\"btn btn-sm btn-primary col-12\">add</button>\n          </div>\n          {(blackList.length > 0) && (\n          <div className=\"list-group col-12 pl-3 mt-3\">\n            {list}\n          </div>\n          )}\n        </div>\n\n      </div>\n    </div>\n\n  );\n};\n\nexport default FilterBlackList;\n","import React from 'react';\nimport cn from 'classnames';\n\nconst FilterRepo = (repoProps) => {\n  const { value, onChange, valid } = repoProps;\n  const classList = cn({\n    'form-control': true,\n    'is-invalid': valid,\n  });\n  return (\n    <div className=\"form-group col-12 col-sm-6\">\n      <label htmlFor=\"repo\" className=\"col-form-label\">Repository</label>\n      <input type=\"text\" className={classList} value={value} onChange={onChange} name=\"repo\" id=\"repo\" />\n      <div className=\"invalid-feedback\">\n        Please fill in the field.\n      </div>\n    </div>\n  );\n};\n\nexport default FilterRepo;\n","import React from 'react';\n//  пакет для формирования строки классов\nimport cn from 'classnames';\n\nconst FilterUserName = (userNameProps) => {\n  const {\n    value,\n    onChange,\n    valid,\n  } = userNameProps;\n  const classList = cn({\n    'form-control': true,\n    'is-invalid': valid,\n  });\n  return (\n    <div className=\"form-group col-12 col-sm-6\">\n      <label htmlFor=\"username\" className=\"col-form-label\">Username</label>\n      <input type=\"text\" className={classList} value={value} onChange={onChange} name=\"username\" id=\"username\" />\n      <div className=\"invalid-feedback\">\n        Please fill in the field.\n      </div>\n    </div>\n  );\n};\n\nexport default FilterUserName;\n","// компонент отвечающий за управление параметрами поиска\nimport React, { useState, useLayoutEffect } from 'react';\nimport cn from 'classnames';\nimport FilterBlackList from './FilterBlackList';\nimport FilterRepo from './FilterRepo';\nimport FilterUserName from './FilterUserName';\n\nconst getRandomNumber = (max) => {\n  const min = 0;\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n// кнопка отправки запроса\nconst FilterSubmit = (propsFilter) => {\n  const { disabled, onClick } = propsFilter;\n  return (\n    <button type=\"button\" className=\"btn btn-primary\" onClick={onClick} disabled={disabled}>find reviewer</button>\n  );\n};\n\n// переключатель видимости настроек фильтра\nconst FilterShow = (propsFilter) => {\n  const { value, onClick } = propsFilter;\n  const status = value ? 'Show' : 'Hide';\n  return (\n    <button type=\"button\" className=\"btn btn-info ml-4\" onClick={onClick}>\n      {status}\n      {' '}\n      filter\n    </button>\n  );\n};\n\nfunction Filter(propsFilter) {\n  const { setAnswer } = propsFilter;\n  const [hide, setHide] = useState(false);\n  const [userNameValue, setUserNameValue] = useState('');\n  const [userNameValid, setUserNameValid] = useState(true);\n  const [repoValue, setRepoValue] = useState('');\n  const [repoValid, setRepoValid] = useState(true);\n  const [blackList, setBlackList] = useState([]);\n  const [fillingQuery, setFillingQuery] = useState(false);\n  const pathApi = `https://api.github.com/repos/${userNameValue}/${repoValue}/contributors`;\n  const urlPathApi = new URL(pathApi);\n  // контроль полей ввода\n  const changeRepoValue = (e) => {\n    const value = e.target.value.trim();\n    setRepoValue(value);\n    setRepoValid(value === '');\n  };\n\n  const changeUserNameValue = (e) => {\n    const value = e.target.value.trim();\n    setUserNameValue(value);\n    setUserNameValid(value === '');\n  };\n\n  // изменение видимости настроек\n  const changeVisibility = () => {\n    setHide(!hide);\n  };\n\n  // удаление юзера из блэклиста\n  const removeElBlackList = (key) => (e) => {\n    e.preventDefault();\n    setBlackList(blackList.filter(({ id }) => id !== key));\n  };\n\n  const classList = cn({\n    'border-0': true,\n    'mt-2': true,\n    'col-12': true,\n    card: true,\n    collapse: hide,\n  });\n\n  // валидация формы, вычисляемое значение поэтому в состояния не заносим\n  const inValidForm = userNameValid || repoValid || fillingQuery;\n\n  // запрос и формирование состояния ответа,\n  // допускается что текущий юзер может быть сам себе ревьювером\n  const getAnswer = (e) => {\n    e.preventDefault();\n    setFillingQuery(true);\n    if ((inValidForm)) return;\n    const query = async () => {\n      try {\n        const respose = await fetch(urlPathApi);\n        if (respose.ok) {\n          const data = await respose.json();\n          const usersBlackList = blackList.map(({ value }) => value.toLowerCase());\n          const userNotBlackList = data\n            .filter(({ login }) => !usersBlackList.includes(login));\n          const count = userNotBlackList.length;\n          let result;\n          switch (count) {\n            case 0:\n              result = null;\n              break;\n            case 1:\n              [result] = userNotBlackList;\n              break;\n            default:\n              result = userNotBlackList[getRandomNumber(count)];\n          }\n          setAnswer({ result: 'answer', response: { reviewer: result, contributors: data, currentUser: userNameValue } });\n        } else {\n          setAnswer({ result: 'notAnswer', response: `Error getting the list of contributors. Error ${respose.status}` });\n        }\n      } catch (_err) {\n        setAnswer({ result: 'error', response: `Error: ${_err.message}.` });\n      }\n      const filterState = {\n        hide,\n        userNameValue,\n        userNameValid,\n        repoValue,\n        repoValid,\n        blackList,\n      };\n      localStorage.setItem('filterState', JSON.stringify(filterState));\n      setFillingQuery(false);\n    };\n    query();\n  };\n\n  const enterDown = (e) => {\n    if (e.keyCode === 13) e.preventDefault();\n  };\n\n  //  исключаем мерцание при отрисовке  - используем useLayoutEffect\n  useLayoutEffect(() => {\n    const filterState = JSON.parse(localStorage.getItem('filterState'));\n\n    if (filterState !== null) {\n      setHide(filterState.hide);\n      setUserNameValue(filterState.userNameValue);\n      setUserNameValid(filterState.userNameValid);\n      setRepoValue(filterState.repoValue);\n      setRepoValid(filterState.repoValid);\n      setBlackList(filterState.blackList);\n    }\n  }, []);\n\n  return (\n    <>\n      <div className={classList}>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <FilterUserName\n              value={userNameValue}\n              valid={userNameValid}\n              onChange={changeUserNameValue}\n            />\n            <FilterRepo\n              value={repoValue}\n              valid={repoValid}\n              onChange={changeRepoValue}\n            />\n          </div>\n          <FilterBlackList\n            blackList={blackList}\n            addElBlackList={setBlackList}\n            onKeyDown={enterDown}\n            removeEl={removeElBlackList}\n          />\n        </div>\n      </div>\n      <div className=\"card col-12 border border-0\">\n        <div className=\"card-body\">\n          <FilterSubmit disabled={inValidForm} onClick={getAnswer} />\n          <FilterShow value={hide} onClick={changeVisibility} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\n\nconst AnswerCardCurrentUser = (dataProps) => {\n  const { user } = dataProps;\n  const [imageSrc, setImageSrc] = useState(null);\n  const pathApi = `https://api.github.com/users/${user}`;\n  const urlPathApi = new URL(pathApi);\n\n  // получение ссылки на аватар\n  useEffect(() => {\n    const query = async () => {\n      try {\n        const respose = await fetch(urlPathApi);\n        if (respose.ok) {\n          const data = await respose.json();\n          setImageSrc(data.avatar_url);\n        } else {\n          setImageSrc(null);\n        }\n      } catch (_err) {\n        setImageSrc(null);\n      }\n    };\n    query();\n  }, [user]);\n\n  return (\n    <div className=\"card col-12 border-0\">\n      <div className=\"card-body fullHeight\">\n        <h4 className=\"card-title mt-3\">Current user</h4>\n        <h5 className=\"card-subtitle mb-2\">{user}</h5>\n        {(imageSrc !== null) && <img className=\"card-img-top\" src={imageSrc} alt=\"Not found foto\" />}\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerCardCurrentUser;\n","import React from 'react';\n\nconst AnswerCardContributor = (data) => {\n  const { user } = data;\n  const { login } = user;\n  const imageSrc = user.avatar_url;\n  return (\n    <div className=\"col\">\n      <div className=\"card h-100 border-0\">\n        <div className=\"card-body\">\n          <div className=\"card-title\"><h5>{login}</h5></div>\n          <img className=\"card-img-top\" src={imageSrc} alt=\"Not found foto\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AnswerCardContributors = (data) => {\n  const { contributors } = data;\n  const listContributors = contributors\n    .map((el) => <AnswerCardContributor key={el.id} user={el} />);\n  return (\n    <div className=\"card col-12 border-0\">\n      <div className=\"card-body\">\n        <h4 className=\"card-title mt-5\">The list of contributors</h4>\n\n        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\n          {listContributors}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerCardContributors;\n","import React from 'react';\n\nconst AnswerCardReviewer = (data) => {\n  const { user } = data;\n  const { login } = user;\n  const imageSrc = user.avatar_url;\n  return (\n    <div className=\"card col-12 border-0\">\n      <div className=\"card-body fullHeight\">\n        <h4 className=\"card-title mt-3\">Reviever</h4>\n        <h5 className=\"card-subtitle mb-2\">{login}</h5>\n        <img className=\"card-img-top\" src={imageSrc} alt=\"Not found foto\" />\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerCardReviewer;\n","import React from 'react';\n\nconst AnswerNotAnswer = (data) => {\n  const { text } = data;\n  return (\n    <div className=\"card col-12 border-0\">\n      <div className=\"card-body\">\n        <div className=\"card-title\"><h3>{text}</h3></div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerNotAnswer;\n","import React from 'react';\nimport AnswerCardCurrentUser from './AnswerCardCurrentUser';\nimport AnswerCardContributors from './AnswerCardContributors';\nimport AnswerCardReviewer from './AnswerCardReviewer';\nimport AnswerNotAnswer from './AnswerNotAnswer';\n\n// компонент отрисовывающий результаты поиска ревьювера\nconst Answer = (answerProps) => {\n  const { data } = answerProps;\n  const { result, response } = data;\n  /* 1 компонент формируется в зависимости от типа ответа, допускается что текущий пользователь\n  может быть сам себе ревьювер\n     2 переменную не инициализирую для явного выделения состояния 'notQuery',\n     3 состояние 'error' выделил отдельно, планирую потом добавить отдельную логику обработки\n     4 наличие секции default по стайлгайду обязательно */\n  let content;\n  switch (result) {\n    case 'error':\n    case 'notAnswer': {\n      content = <AnswerNotAnswer text={response} />;\n      break;\n    }\n    case 'notQuery': {\n      content = null;\n      break;\n    }\n    case 'answer': {\n      const { reviewer, contributors, currentUser } = response;\n      /* костыль с <AnswerNotAnswer text=\"Something went wrong\" /> */\n      content = reviewer === undefined\n        ? <AnswerNotAnswer text=\"Something went wrong\" />\n        : (\n          <>\n            <AnswerCardCurrentUser user={currentUser} />\n            {(reviewer === null) && <AnswerNotAnswer text=\"The reviewer was not found\" />}\n            {(reviewer !== null) && <AnswerCardReviewer user={reviewer} />}\n            <AnswerCardContributors contributors={contributors} />\n          </>\n        );\n      break;\n    }\n    default:\n      content = <AnswerNotAnswer text=\"Something went wrong\" />;\n      break;\n  }\n  return content;\n};\n\nexport default Answer;\n","import React, { useState } from 'react';\nimport Filter from '../Filter/Filter';\nimport Answer from '../Answer/Answer';\n\nfunction App() {\n  const [answer, setAnswer] = useState({ result: 'notQuery' });\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Filter setAnswer={setAnswer} />\n      </div>\n      <div className=\"row\">\n        <Answer data={answer} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n//  import reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//  reportWebVitals();\n"],"sourceRoot":""}